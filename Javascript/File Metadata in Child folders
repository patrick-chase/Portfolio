/** Notes
 * This work flow was informed by: 
 *    https://gist.github.com/mesgarpour/07317e81e9ee2b3f1699 
 *    https://developers.google.com/apps-script/reference/drive/folder-iterator
 *    https://stackoverflow.com/questions/40607752/google-apps-script-exception-cannot-retrieve-the-next-object-iterator-has-reac 
 *    https://stackoverflow.com/questions/45689629/how-to-use-continuationtoken-with-recursive-folder-iterator
 *    
 */;


function onOpen() {
  var SS = SpreadsheetApp.getActiveSpreadsheet();
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('List Files/Folders')
    .addItem('List All Files and Folders', 'listFilesAndFolders')
    .addToUi();
};

//folder ids you're targeting .
monthFolder = ["Folderid", "Seperated by commas"]; 

//Tabs in google sheet. 
pageName = [];

var startTime = (new Date()).getTime();  

    function listFilesAndFolders(){
      for(z=0; z<monthFolder.length; z++){
      // var folderId = Browser.inputBox('Enter folder ID', Browser.Buttons.OK_CANCEL);
      var today = new Date();
      var folderId = monthFolder[z]
      if (folderId === "") {
        Browser.msgBox('Folder ID is invalid');
        return;
      }
      getFolderTree(folderId, true); 
    };
  };  

    // Get Folder Tree
    function getFolderTree(folderId, listAll) {
      try {
        // Get folder by id
        var parentFolder = DriveApp.getFolderById(folderId);
        
        // Initialise the sheet
        var file, data, sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(pageName[z]);
        // sheet.clear();
        sheet.appendRow(["Full Path", "Name","Type" ,"Date Created", "URL", "Last Updated", "Owner Email"]);
        
        // Get files and folders
        getChildFolders(parentFolder.getName(), parentFolder, data, sheet, listAll);
      } catch (e) {
        Logger.log(e.toString());
      }
    };

    // Get the list of files and folders and their metadata in recursive mode
    function getChildFolders(parentName, parent, data, sheet, listAll) {
      var childFolders = parent.getFolders();
      var today = new Date();
    
      // List folders inside the folder
      while (childFolders.hasNext()) {
        var childFolder = childFolders.next();
        var currTime = (today.getTime()); 
        var elapsedTimeInMS = currTime - startTime;
        var timeLimitExceeded = elapsedTimeInMS >= MAX_RUNNING_TIME_MS;
        // this conditional sets the time frame to the previous days. the last number(5) is the total number of days you're pull data for.  
        if(childFolder.getLastUpdated() >= (today - (1000 * 60 * 60 * 24*5))){
          var folderId = childFolder.getId();

          data = [ 
            parentName + "/" + childFolder.getName(),
            childFolder.getName(),
            "Folder",
            childFolder.getDateCreated(),
            childFolder.getUrl(),
            childFolder.getLastUpdated(),
            childFolder.getOwner().getEmail()
          ];
          // Write to sheet
          sheet.appendRow(data)
          };

        // List files inside the folder
        var files = childFolder.getFiles();

          while (listAll & files.hasNext()) {
            var childFile = files.next();
            
            // past 5 days of files only
            if(childFile.getLastUpdated() >= (today - (1000 * 60 * 60 * 24*5))){
              data = [ 
                parentName + "/" + childFolder.getName() + "/" + childFile.getName(),
                childFile.getName(),
                "Files",
                childFile.getDateCreated(),
                childFile.getUrl(),
                childFile.getLastUpdated(),
                childFile.getOwner().getEmail(),
              ];
              // Write
              sheet.appendRow(data)
            }
        }
        // Recursive call of the subfolder
        getChildFolders(parentName + "/" + childFolder.getName(), childFolder, data, sheet, listAll);  
      }
    };
